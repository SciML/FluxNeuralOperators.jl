@testset "polynomials" begin
    @testset "legendre_ϕ_ψ" begin
        ϕ, ψ1, ψ2 = NeuralOperators.legendre_ϕ_ψ(10)

        @test all(coeffs(ϕ[1]) .≈ [1.])
        @test all(coeffs(ϕ[2]) .≈ [-1.7320508075688772, 3.4641016151377544])
        @test all(coeffs(ϕ[3]) .≈ [2.23606797749979, -13.416407864998739, 13.416407864998739])
        @test all(coeffs(ϕ[4]) .≈ [-2.6457513110645907, 31.74901573277509, -79.37253933193772, 52.91502622129181])
        @test all(coeffs(ϕ[5]) .≈ [3.0, -60.0, 270.0, -420.0, 210.0])
        @test all(coeffs(ϕ[6]) .≈ [-3.3166247903554, 99.498743710662, -696.491205974634, 1857.309882599024,
                                -2089.4736179239017, 835.7894471695607])
        @test all(coeffs(ϕ[7]) .≈ [3.605551275463989, -151.43315356948753, 1514.3315356948754, -6057.326142779501,
                                11357.486517711566, -9994.588135586178, 3331.529378528726])
        @test all(coeffs(ϕ[8]) .≈ [-3.872983346207417, 216.88706738761536, -2927.9754097328073, 16266.530054071152,
                                -44732.957648695665, 64415.45901412176, -46522.27595464349, 13292.078844183856])
        @test all(coeffs(ϕ[9]) .≈ [4.123105625617661, -296.86360504447157, 5195.113088278253, -38097.49598070719,
                                142865.60992765194, -297160.46864951606, 346687.21342443535, -212257.47760679715,
                                53064.36940169929])
        @test all(coeffs(ϕ[10]) .≈ [-4.358898943540674, 392.30090491866065, -8630.619908210534, 80552.45247663166,
                                -392693.20582357934, 1099540.9763060221, -1832568.2938433702, 1795168.9409077913,
                                -953683.4998572641, 211929.66663494756])
        
        ϕ, ψ1, ψ2 = NeuralOperators.legendre_ϕ_ψ(3)
        @test coeffs(ϕ[1]) ≈ [1.]
        @test coeffs(ϕ[2]) ≈ [-1.7320508075688772, 3.4641016151377544]
        @test coeffs(ϕ[3]) ≈ [2.23606797749979, -13.416407864998739, 13.416407864998739]
        @test coeffs(ψ1[1]) ≈ [-1.0000000000000122, 6.000000000000073]
        @test coeffs(ψ1[2]) ≈ [1.7320508075691732, -24.248711305967735, 51.96152422707261]
        @test coeffs(ψ1[3]) ≈ [2.2360679774995615, -26.832815729994504, 53.665631459989214]
        @test coeffs(ψ2[1]) ≈ [-5.000000000000066, 6.000000000000073]
        @test coeffs(ψ2[2]) ≈ [29.44486372867492, -79.67433714817852, 51.96152422707261]
        @test coeffs(ψ2[3]) ≈ [-29.068883707507286, 80.49844719001908, -53.665631460012115]
    end

    @testset "chebyshev_ϕ_ψ" begin
        ϕ, ψ1, ψ2 = NeuralOperators.chebyshev_ϕ_ψ(3)
        @test ϕ[1](0) ≈ 0.7978845608028654
        @test ϕ[1](1) ≈ 0.7978845608028654
        @test ϕ[1](2) ≈ 0.
        @test ϕ[2](0) ≈ -1.1283791670955126
        @test ϕ[2](1) ≈ 1.1283791670955126
        @test ϕ[2](2) ≈ 0.
        @test ϕ[3](0) ≈ 1.1283791670955126
        @test ϕ[3](1) ≈ 1.1283791670955126
        @test ϕ[3](2) ≈ 0.

        @test ψ1[1](0) ≈ -0.5560622352843183
        @test ψ1[1](1) ≈ 0.
        @test ψ1[1](2) ≈ 0.
        @test ψ1[2](0) ≈ 0.932609257876051
        @test ψ1[2](1) ≈ 0.
        @test ψ1[2](2) ≈ 0.
        @test ψ1[3](0) ≈ 1.0941547380212637
        @test ψ1[3](1) ≈ 0.
        @test ψ1[3](2) ≈ 0.

        @test ψ2[1](0) ≈ -0.
        @test ψ2[1](1) ≈ 0.5560622352843181
        @test ψ2[1](2) ≈ 0.
        @test ψ2[2](0) ≈ 0.
        @test ψ2[2](1) ≈ 0.9326092578760665
        @test ψ2[2](2) ≈ 0.
        @test ψ2[3](0) ≈ 0.
        @test ψ2[3](1) ≈ -1.0941547380212384
        @test ψ2[3](2) ≈ 0.
    end

    @testset "legendre_filter" begin
        H0, H1, G0, G1, Φ1, Φ2 = NeuralOperators.legendre_filter(3)

        @test H0 ≈ [0.70710678  0.         0.       ;
                   -0.61237244  0.35355339 0.       ;
                    0.         -0.6846532  0.1767767]
        @test H1 ≈ [0.70710678 0.         0.       ;
                    0.61237244 0.35355339 0.       ;
                    0.         0.6846532  0.1767767]
        @test G0 ≈ [0.35355339 0.61237244 0.        ;
                    0.         0.1767767  0.6846532 ;
                    0.         0.         0.70710678]
        @test G1 ≈ [-0.35355339 0.61237244 0.        ;
                    0.         -0.1767767  0.6846532 ;
                    0.          0.        -0.70710678]
        @test Φ1 == I(3)
        @test Φ2 == I(3)
    end

    @testset "chebyshev_filter" begin
        # H0, H1, G0, G1, Φ1, Φ2 = NeuralOperators.chebyshev_filter(3)

        # @test H0 ≈ [0.70710678  0.          0.       ;
        #            -0.5         0.35355339  0.       ;
        #            -0.25       -0.70710678  0.1767767]
        # @test H1 ≈ [0.70710678  0.          0.       ;
        #             0.5         0.35355339  0.       ;
        #            -0.25        0.70710678  0.1767767]
        # @test G0 ≈ [0.60944614 0.77940383 0.        ;
        #             0.66325172 1.02726613 1.14270252;
        #             0.61723435 0.90708619 1.1562954 ]
        # @test G1 ≈ [-0.60944614  0.77940383  0.       ;
        #             0.66325172 -1.02726613  1.14270252;
        #            -0.61723435  0.90708619 -1.1562954 ]
        # @test Φ1 ≈ [1.         -0.40715364 -0.21440101;
        #            -0.40715364  0.84839559 -0.44820615;
        #            -0.21440101 -0.44820615  0.84002127]
        # @test Φ2 ≈ [1.          0.40715364 -0.21440101;
        #             0.40715364  0.84839559  0.44820615;
        #            -0.21440101  0.44820615  0.84002127]
    end
end
